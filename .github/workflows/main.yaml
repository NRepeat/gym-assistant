name: CI-CD Pipeline Deploy to Prod

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: gym-app-env  # Environment name

    steps:
    - name: Get Github Actions IP
      id: ip
      uses: haythem/public-ip@v1.2

    - name: Debug AWS_SG_NAME
      run: echo "AWS_SG_NAME is ${{ secrets.AWS_SG_NAME }}"

    - name: Add Github Actions IP to Security group
      run: |
        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_NAME }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION}}

    - name: Deploy to prod server
      run: |
        echo "${{ secrets.SSH_KEY }}" > /tmp/aws_ssh_key.pem
        chmod 600 /tmp/aws_ssh_key.pem
        ssh  -o StrictHostKeyChecking=no -i /tmp/aws_ssh_key.pem ec2-user@${{ secrets.HOST_IP }} << 'EOF'
          cd /home/ec2-user/app/gym-assistant
          git stash
          git pull origin main
        # Uncomment these lines if you need to install dependencies or build
        docker build -t gym-table .
        docker stop gym-table || true
        docker rm gym-table || true
        docker run -d --name gym-table -p 3000:3000 gym-table
        
        
        EOF
      env:
        AWS_SSH_KEY: ${{ secrets.SSH_KEY }}  # SSH private key for EC2
        AWS_EC2_PUBLIC_IP: ${{ secrets.HOST_IP }}  # Public IP of your EC2 instance

    - name: Remove Github Actions IP from Security group
      run: |
        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_NAME }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      if: always()
