// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model WorkoutData {
//   id Int @id @default(autoincrement())

//   day       String   @unique
//   month     Int
//   year      Int
//   image     String?
//   data      Json
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model Heroes {
//   id          Int        @id @default(autoincrement())
//   name        String
//   description Json
//   workout     Json
//   movement    Movement[] @relation("HeroMovements")
//   image       String[]
//   thumbnails  String[]
//   createdAt   DateTime   @default(now())
//   updatedAt   DateTime   @updatedAt
// }

// model Opens {
//   id          Int        @id @default(autoincrement())
//   year        Int
//   open        Int
//   workout     Json
//   pdf         String
//   description Json
//   thumbnails  String[]
//   movement    Movement[] @relation("OpenMovements")
//   createdAt   DateTime   @default(now())
//   updatedAt   DateTime   @updatedAt
// }

// model Semifinals {
//   id          Int        @id @default(autoincrement())
//   year        Int
//   semifinal   Int
//   workout     Json
//   pdf         String
//   description Json
//   thumbnails  String[]
//   movement    Movement[] @relation("SemifinalMovements")
//   createdAt   DateTime   @default(now())
//   updatedAt   DateTime   @updatedAt
// }

// model Movement {
//   id          Int      @id @default(autoincrement())
//   name        String   @unique
//   description String
//   year        Int?
//   workout     Int?
//   image       String[]

//   createdAt  DateTime     @default(now())
//   updatedAt  DateTime     @updatedAt
//   heroes     Heroes[]     @relation("HeroMovements")
//   opens      Opens[]      @relation("OpenMovements")
//   semifinals Semifinals[] @relation("SemifinalMovements")
// }

model User {
  id        Int              @id @default(autoincrement())
  name      String
  email     String           @unique
  password  String
  sessions  WorkoutSession[]
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

// model UserSession {
//   id        Int      @id @default(autoincrement())
//   session   String
//   user      User?
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

model WorkoutSession {
  id        Int      @id @default(autoincrement())
  timeCap   Int?
  rounds    Int?
  wodId     Int
  schedule  DateTime
  date      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}

model Wod {
  id                 Int           @id @default(autoincrement())
  type               WodType?      @relation(fields: [typeId], references: [id])
  typeId             Int?          @unique
  description        String?
  uuid               String        @unique
  strategy           String?
  scaling            String?
  title              String?
  thumbnail          String?
  workout            String?
  intermediateOption String?
  beginnerOption     String?
  hero               Boolean       @default(false)
  coachComments      String?
  resources          Json?
  createdByUser      Boolean
  images             WodImage[]
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  movement           WodMovement[]
}

model Media {
  id                  Int                   @id @default(autoincrement())
  name                String
  type                String
  url                 String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  wodImage            WodImage[]
  wodMovementBaseInfo WodMovementBaseInfo[]
}

model WodImage {
  id    Int     @id @default(autoincrement())
  image Media[]

  wod       Wod?     @relation(fields: [wodId], references: [id])
  wodId     Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WodType {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String
  wod         Wod?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model WodMovement {
  id          Int     @id @default(autoincrement())
  description String?
  reps        Int?

  infoId    Int                 @unique
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
  wod       Wod[]
  info      WodMovementBaseInfo @relation(fields: [infoId], references: [id])
}

model WodMovementBaseInfo {
  id          Int            @id @default(autoincrement())
  name        String         @unique
  description String
  image       Media[]
  equipment   WodEquipment[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  wodMovement WodMovement?
}

model WodEquipment {
  id                  Int                   @id @default(autoincrement())
  name                String                @unique
  description         String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  wodMovementBaseInfo WodMovementBaseInfo[]
}
